{"version":3,"sources":["Components/About.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["About","id","className","style","textAlign","display","justifyContent","flexWrap","src","alt","href","Component","Home","props","state","hover","n","this","setState","onMouseOver","showanim","onMouseLeave","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8MAgFeA,E,iLA5EP,OACI,yBAAKC,GAAG,SACL,yBAAKC,UAAU,0BAGN,yBAAKA,UAAU,WACX,8DACA,wBAAIA,UAAU,UACd,yBAAKA,UAAU,aACX,6fAMI,6BANJ,0KASI,6BATJ,2MAYI,6BACA,6BAbJ,4OAiBI,6BAjBJ,kcAsBI,6BACA,6BACA,yBAAKC,MAAO,CAACC,UAAU,WAAW,+IAO1C,+CACA,wBAAIF,UAAU,UAEd,yBAAKC,MAAO,CAACE,QAAQ,OAAQC,eAAe,eAAgBC,SAAS,SACjE,yBAAKL,UAAU,aACX,yBAAKA,UAAU,wBAAwBM,IAAI,gBAAgBC,IAAI,eAC/D,uBAAGP,UAAU,QAAb,YAGJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,wBAAwBM,IAAI,sBAAsBC,IAAI,eACrE,uBAAGP,UAAU,QAAb,cAIJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,wBAAwBM,IAAI,gBAAgBC,IAAI,eAC/D,uBAAGP,UAAU,QAAb,YAYhB,uBAAGA,UAAU,kBAAkBQ,KAAK,oCAAmC,uD,GAvEvEC,aCmDLC,E,YAlDX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,CACPC,OAAQ,GAHE,E,sEAOTC,GACLC,KAAKC,SAAS,CAACH,MAAMC,M,+BAIhB,IAAD,OACJ,OAEI,yBAAKd,UAAU,2BAGX,yBAAMA,UAAU,iBACZ,yBAAKA,UAAU,UAASM,IAAI,qBAAqBC,IAAI,gBACrD,yBAAKP,UAAU,OAAOC,MAAO,IACzB,gaAGuE,6BAHvE,sBAII,+EAJJ,IAMI,6BANJ,+EAQI,6BARJ,+GAeR,yBAAKD,UAAU,kBAEX,uBAAIQ,KAAK,SAASR,UAAU,aAAaiB,YAAa,kBAAI,EAAKC,UAAS,IAAOC,aAAc,kBAAI,EAAKD,UAAS,KAA/G,kBACCH,KAAKH,MAAMC,MAAQ,yBAAKb,UAAU,cAAcM,IAAI,iBAAiBC,IAAI,gBAAuB,yBAAKP,UAAU,2B,GAxCjHS,aCoBJW,E,iLAZP,OACI,6BAEI,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GATEX,aCQEY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.05222974.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\nclass About extends Component{\r\n    render(){\r\n        return (\r\n            <div id='about'>\r\n               <div className='container ctnr-valeurs' >\r\n\r\n                       \r\n                        <div className=\"valeurs\">\r\n                            <h1>Engagements Valeurs et Actions</h1>\r\n                            <hr className=\"hr-h1\"/>      \r\n                            <div className=\"container\">\r\n                                <p>\r\n                                    Partir certes, mais pour quoi faire ? Nous sommes Suzanne, Charlotte et Juba, trois \r\n                                    étudiants en management et informatique, et c’est la question que nous nous sommes \r\n                                    posées lors de notre année de césure. On souhaitait nous engager au sein d’un projet \r\n                                    porteur de sens, et apporter notre aide avec les moyens dont nous disposions. Un triste \r\n                                    constat s’est révélé à nous : il est bien plus difficile d’aider qu’il n’y paraît. \r\n                                    <br/>\r\n                                    Beaucoup d’offres de volontariats existent sur internet mais nombre d’entre elles sont issues\r\n                                    d’agences de volontourisme, ou d’ONG internationales.\r\n                                    <br/> \r\n                                    Pas ou très peu d’offre ou même de visibilité de la part d’organisations locales. \r\n                                    Proposer son aide aux organisations les plus demandeuses d’aide n’est pas chose aisée.\r\n                                    <br/>\r\n                                    <br/> \r\n                                    L’idée de Participact est alors née : proposer un support qui mettrait en lien des organisations \r\n                                    qui auraient le plus besoin de volontaires, avec des personnes qui souhaiteraient aider de manière \r\n                                    véritablement utile. \r\n                                    <br/>\r\n                                    Nous partons donc rencontrer et échanger avec les personnes qui composent ces organisations. \r\n                                    Ces organisations font toutes partie de l’ESS, à travers différentes problématiques (sociales, \r\n                                    environnementales, entrepreneuriales, etc) et chacune d’entre elles représente un apport incroyable de connaissance, \r\n                                    puisqu’elles proposent, incarnent, et réinventent les nouveaux modèles d’une économie alternative. \r\n                                    <br/>\r\n                                    <br/>\r\n                                    <div style={{textAlign:'center'}}><strong>Participact est un projet qui nous ressemble,\r\n                                     humble, vecteur d’échanges et de projets durables.</strong></div>\r\n\r\n                                </p>\r\n                            </div>\r\n\r\n\r\n                            <h2>Notre équipe</h2>\r\n                            <hr className=\"hr-h1\"/>        \r\n                    \r\n                            <div style={{display:'flex', justifyContent:'space-around', flexWrap:'wrap'}}>\r\n                                <div className=\"box-perso\">\r\n                                    <img className='shadow-lg avatar-pres' src='image/suz.jpg' alt='teamMember'/>\r\n                                    <p className='name'>Suzanne</p>\r\n                                </div>\r\n\r\n                                <div className=\"box-perso\">\r\n                                    <img className='shadow-lg avatar-pres' src='image/charlotte.jpg' alt='teamMember'/>\r\n                                    <p className='name'>Charlotte</p>\r\n                                    \r\n                                </div>\r\n\r\n                                <div className=\"box-perso\">\r\n                                    <img className='shadow-lg avatar-pres' src='image/moi.jpg' alt='teamMember'/>\r\n                                    <p className='name'>Juba</p>\r\n                                \r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            \r\n\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <a className='btn contact-btn' href=\"mailto:participact.org@gmail.com\"><h2> Contactez-nous !</h2></a>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React, {Component} from 'react';\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hover : false\r\n        }\r\n    }\r\n\r\n    showanim(n){\r\n        this.setState({hover:n})\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n\r\n            <div className='container-fluid bg page'>\r\n               \r\n                \r\n                <div  className='ctnr-home-txt'>\r\n                    <img className='logo-fp'src='image/2x/titre.png' alt='ParticipAct'/>\r\n                    <div className='pres' style={{}}>\r\n                        <p>Participact met en relation un public intéressé par un volontariat utile avec des organisations\r\n                            locales (associations, ONG, coopératives, et autres) à la recherche de volontaires. Il s’agit\r\n                            d’une plateforme d’échange entre des personnes des quatre coins du monde ayant toutes en commun \r\n                            cette envie de participer à un projet humaniste et porteur de sens.<br/> Pour faire court :  \r\n                            <strong> ParticipAct aspire à créer du lien !</strong>.\r\n                        \r\n                            <br/>\r\n                            Transparence, collaboration et action locale sont les valeurs de Participact\r\n                            <br/>\r\n                            À vous maintenant, volontaires, organisations, associations, entrepreneurs de rejoindre notre action !\r\n                        </p> \r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='ctnr-home-btns' >\r\n                    \r\n                    <a  href='#about' className='btnGen btn' onMouseOver={()=>this.showanim(true)} onMouseLeave={()=>this.showanim(false)}>En savoir plus</a>\r\n                    {this.state.hover ? <img className='item-scroll' src='image/down.png' alt='scroll down'></img> : <div className='item-void-scroll'></div>}\r\n\r\n\r\n                </div>\r\n                \r\n    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport About from './Components/About.js'\r\nimport Home from './Components/Home.js'\r\n\r\n\r\nclass App extends Component{\r\n   \r\n    \r\n  \r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n                <Home />\r\n                <About/>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './css/layout.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}